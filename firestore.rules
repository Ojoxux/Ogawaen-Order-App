rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // 管理者かどうかをチェックするヘルパー関数
    function isAdmin(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) &&
             get(/databases/$(database)/documents/users/$(userId)).data.role == 'admin';
    }

    // usersコレクション
    match /users/{userId} {
      allow read: if true;
      allow create, update, delete: if isAdmin(request.auth.uid);
    }

    // ordersコレクション
    match /orders/{orderId} {
      allow read, write: if true;
    }

    // productsコレクション
    match /products/{productId} {
      allow read: if true;
      allow write: if isAdmin(request.auth.uid);
    }

    // その他のコレクション
    match /{document=**} {
      allow read, write: if true;
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    match /product-images/{imageId} {
      allow read: if true;
      allow write: if request.auth != null;
    }
    match /{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null;
    }
  }
}